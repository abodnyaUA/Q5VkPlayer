/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DBusAdaptor1 -a dbusadaptor1.h:dbusadaptor1.cpp org.mpris.MediaPlayer2.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dbusadaptor1.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DBusAdaptor1
 */

DBusAdaptor1::DBusAdaptor1(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DBusAdaptor1::~DBusAdaptor1()
{
    // destructor
}

bool DBusAdaptor1::canQuit() const
{
    // get the value of property CanQuit
    return qvariant_cast< bool >(parent()->property("CanQuit"));
}

bool DBusAdaptor1::canRaise() const
{
    // get the value of property CanRaise
    return qvariant_cast< bool >(parent()->property("CanRaise"));
}

bool DBusAdaptor1::canSetFullscreen() const
{
    // get the value of property CanSetFullscreen
    return qvariant_cast< bool >(parent()->property("CanSetFullscreen"));
}

QString DBusAdaptor1::desktopEntry() const
{
    // get the value of property DesktopEntry
    return qvariant_cast< QString >(parent()->property("DesktopEntry"));
}

bool DBusAdaptor1::fullscreen() const
{
    // get the value of property Fullscreen
    return qvariant_cast< bool >(parent()->property("Fullscreen"));
}

void DBusAdaptor1::setFullscreen(bool value)
{
    // set the value of property Fullscreen
    parent()->setProperty("Fullscreen", QVariant::fromValue(value));
}

bool DBusAdaptor1::hasTrackList() const
{
    // get the value of property HasTrackList
    return qvariant_cast< bool >(parent()->property("HasTrackList"));
}

QString DBusAdaptor1::identity() const
{
    // get the value of property Identity
    return qvariant_cast< QString >(parent()->property("Identity"));
}

QStringList DBusAdaptor1::supportedMimeTypes() const
{
    // get the value of property SupportedMimeTypes
    return qvariant_cast< QStringList >(parent()->property("SupportedMimeTypes"));
}

QStringList DBusAdaptor1::supportedUriSchemes() const
{
    // get the value of property SupportedUriSchemes
    return qvariant_cast< QStringList >(parent()->property("SupportedUriSchemes"));
}

void DBusAdaptor1::Quit()
{
    // handle method call org.mpris.MediaPlayer2.Quit
    QMetaObject::invokeMethod(parent(), "Quit");
}

void DBusAdaptor1::Raise()
{
    // handle method call org.mpris.MediaPlayer2.Raise
    QMetaObject::invokeMethod(parent(), "Raise");
}

